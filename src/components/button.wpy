<style lang="less">
  @import "../less/mixin";

  .button {
    .flex-center();
    padding-left: 40rpx;
    padding-right: 40rpx;
    border-radius: 16rpx;
    flex-direction: row;
    color: #444;
    font-size: 28rpx;
    border: 2rpx solid transparent;
    box-sizing: border-box;

    &.inline {
      display: inline-flex;
    }

    &.primary {
      color: #fff;
      background-color: @gcolor;
      &:active{
        background-color: darken(@gcolor, 10%);
      }
    }
    &.success {
      color: #fff;
      background-color: #5cb85c;
      &:active{
        background-color: darken(#5cb85c, 10%);
      }
    }
    &.info {
      color: #fff;
      background-color: #5bc0de;
      &:active{
        background-color: darken(#5bc0de, 10%);
      }
    }
    &.warning {
      color: #fff;
      background-color: #f0ad4e;
      &:active{
        background-color: darken(#f0ad4e, 10%);
      }
    }
    &.danger {
      color: #fff;
      background-color: #d9534f;
      &:active{
        background-color: darken(#d9534f, 10%);
      }
    }
    &.default {
      background-color: #e5e5e5;
      &:active{
        background-color: darken(#e5e5e5, 10%);
      }
    }
    &.disabled {
      background-color: #ccc;
      pointer-events: none;
    }

    &.large {
      height: @large;
      font-size: 36rpx;
     /* > .icon {
        margin-left: -48rpx;
      }*/
    }
    &.normal {
      height: @normal;
      /*> .icon {
        margin-left: -72rpx;
      }*/
    }
    &.small {
      height: @small;
      /*> .icon {
        margin-left: -64rpx;
      }*/
    }

  }
</style>

<template>
  <view class="button {{inline ? 'inline' : ''}} {{disabled ? 'disabled' : ''}} {{size}} {{type}}" style="{{style}}" @tap="tap">
    <icon wx:if="{{icon}}" :name="icon" :size="size"></icon>
    <slot></slot>
    {{text}}
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Icon from './icon'

  export default class Button extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      icon: {
        type: String,
        default: ''
      },
      size: {
        type: String,
        default: 'normal'
      },
      type: {
        type: String,
        default: 'primary'
      },
      inline: {
        type: [Boolean, String],
        default: false,
        coerce: (t) => typeof t === 'string' ? JSON.parse(t) : t
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce: (t) => typeof t === 'string' ? JSON.parse(t) : t
      },
      text: {
        type: String,
        default: ''
      }
    }

    components = {
      icon: Icon
    }

    data = {

    }

    methods = {
      tap ($event) {
        this.$emit('tap', $event)
      }
    }
  }
</script>
