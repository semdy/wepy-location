<style lang="less">
  @import "../less/mixin";

  .switch-button-wrap {
    position: relative;
    display: inline-block;
    background-color: #e5e5e7;
    overflow: hidden;

    &.large {
      border-radius: @large/2;
    }
    &.normal {
      border-radius: @normal/2;
    }
    &.small {
      border-radius: @small/2;
    }

    &.disabled {
      pointer-events: none;
    }
  }

  .switch-indicator {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    transition: transform .2s ease-out;
  }

  .switch-dot {
    background-color: #01458e;
    height: 100%;

    &.large {
      border-radius: @large/2;
    }
    &.normal {
      border-radius: @normal/2;
    }
    &.small {
      border-radius: @small/2;
    }
  }

  .switch-button-body{
    position: relative;
    .flex();
  }

  .switch-button {
    .flex-center();
    flex: 1;
    padding-left: 30rpx;
    padding-right: 30rpx;
    color: #88a8c1;
    white-space: nowrap;
    transition: color .3s .1s;

    &.large {
      height: @large;
      font-size: 32rpx;
      border-radius: @large/2;
    }
    &.normal {
      height: @normal;
      border-radius: @normal/2;
    }
    &.small {
      height: @small;
      border-radius: @small/2;
    }

    &.selected{
      //background-color: #01458e;
      color: #fff;
      transition: color .3s .2s;
    }

  }
</style>

<template>
  <view class="switch-button-wrap {{size}} {{className}} {{disabled ? 'disabled' : ''}}" style="{{style}}" @tap="tap" wx:if="{{buttons.length>0}}">
    <view class="switch-indicator" style="transform:translateX({{x}});">
      <view class="switch-dot {{size}}" style="width:{{indWidth}};"></view>
    </view>
    <view class="switch-button-body">
      <repeat for="{{buttons}}">
        <view class="switch-button {{size}} {{switchIndex == index ? 'selected' : ''}}">{{item}}</view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Switchbutton extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      switchIndex: {
        type: [String, Number],
        default: 0,
        coerce: n => +n
      },
      size: {
        type: String,
        default: 'normal'
      },
      disabled: {
        type: [Boolean, String],
        default: false,
        coerce: t => typeof t === 'string' ? JSON.parse(t) : t
      },
      buttons: {
        type: Array,
        default: []
      }
    }

    components = {

    }

    data = {
      switchIndex: this.switchIndex
    }

    computed = {
      indWidth () {
        return (1 / this.buttons.length) * 100 + '%'
      },
      x () {
        return (1 / this.buttons.length) * 100 * this.switchIndex + '%'
      }
    }

    methods = {
      tap ($event) {
        this.switchIndex = (this.switchIndex + 1) % this.buttons.length
        this.$emit('tap', this.switchIndex, $event)
      }
    }
  }
</script>
