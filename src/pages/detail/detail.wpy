<style lang="less">
  @import "../../less/mixin";

  .map-container {
    flex: 1;
    height: 50%;
  }
  .map-inner {
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  .info-container {
    flex: 1;
    padding: 30rpx 20rpx 0;
    background-color: #f0f0f0;
  }
  .scan-button {
    margin-bottom: 20rpx;
  }
  .info-panel {
    border-radius: 12rpx;
    background-color: #fff;
    padding: 20rpx 30rpx;
    margin-bottom: 20rpx;

    &.actived {
      &:active {
        background-color: darken(#fff, 15%);
      }
    }
  }
  .pass-item {
    padding: 4rpx 0;
    .label {
      margin-right: 20rpx;
      font-weight: bold;
    }
    .icon {
      margin-left: -10rpx;
    }
  }
  .tool-item {
    &.hd {
      font-weight: bold;
      font-size: 30rpx;
      padding: 0 0 12rpx;
      margin-bottom: 12rpx;
      border-bottom: 2rpx solid #ddd;
    }
    padding: 6rpx 0;

    text:first-child {
      display: inline-block;
      width: 6em;
    }
  }

  .action-item {
    height: 80rpx;
    .flex-v-center();
  }
</style>
<template>
  <view class="map-container">
    <view class="map-inner">
      <map id="map" longitude="{{longitude}}" latitude="{{latitude}}" scale="14" controls="{{controls}}" markers="{{markers}}" @markertap="markertap" polyline="{{polyline}}" @regionchange="regionchange" show-location style="width: 100%; height: 100%;"></map>
    </view>
  </view>
  <view class="info-container">
    <block wx:if="{{scanResult==''}}">
      <scanbutton icon="scan.svg" class="scan-button" @tap.user="launchScaner">扫码</scanbutton>
      <view class="info-panel">
        <view class="pass-item">
          <clockicon name="clock.svg" style="margin-left: -2rpx;" />
          <text class="label">最近定位时间:</text>
          <text>{{updateTime}}</text>
        </view>
        <repeat for="{{markers}}" key="index">
          <view class="pass-item">
            <starticon :name="item.icon" size="middle" />
            <text class="label">{{item.prefix}}位置:</text>
            <text>{{item.address}}</text>
          </view>
        </repeat>
      </view>

      <view class="info-panel">
        <view class="tool-item hd">
          <text>工具箱号码</text>
          <text>{{toolBox.RFID}}</text>
        </view>
        <repeat for="{{toolBox.tool}}" key="index">
          <view class="tool-item">
            <text>{{item.name}}</text>
            <text>{{item.count}}</text>
          </view>
        </repeat>
      </view>
    </block>
    <block wx:else>
      <view class="info-panel actived">
        <view class="action-item">
          <fixicon name="tool.svg" size="middle" />
          报修
        </view>
      </view>
      <view class="info-panel actived">
        <view class="action-item">
          <confirmicon name="confirm.svg" size="large" />
          确认收货
        </view>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Button from '../../components/button'
  import Icon from '../../components/icon'
  import {formatDate} from '../../utils/util'
  import fetch from '../../service/fetch'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '设备详情'
    }

    components = {
      scanbutton: Button,
      fixicon: Icon,
      confirmicon: Icon,
      clockicon: Icon,
      starticon: Icon,
      passicon: Icon,
      curricon: Icon,
      desticon: Icon
    }

    data = {
      scanResult: '',
      longitude: '113.324520',
      latitude: '23.099994',
      toolBox: {},
      task: {},
      markers: [],
      device: {},
      polyline: [{
        points: [],
        color: '#FF0000DD',
        width: 2,
        dottedLine: true
      }]
    }

    computed = {
      updateTime() {
        if (this.toolBox.updatedAt) {
          return formatDate(this.toolBox.updatedAt, 'yyyy/MM/dd HH:mm')
        }
        return ''
      }
    }

    methods = {
      async launchScaner () {
        let res = await wepy.scanCode()
        console.log(res.result)
        this.scanResult = res.result
        this.$apply()
      },
      regionchange(e) {
        console.log(e.type)
      },
      markertap(e) {
        console.log(e)
      }
    }

    async queryDetail(RFID) {
      try {
        let res = await fetch.get('http://testsrv.kurite.cn/qs/find/toolBox/one', {RFID})
        let {task, toolBox, device} = res.data
        let flows = []
        task.transflow.forEach((item, i, self) => {
          let icon = ''
          let prefix = ''

          if (i === 0) {
            icon = 'start'
            prefix = '起始'
          }
          else if (i === self.length - 1) {
            icon = 'current'
            prefix = '当前'
          }
          else {
            icon = 'pass'
            prefix = '经过'
          }

          flows.push({
            id: i,
            icon: `${icon}.png`,
            iconPath: `/images/${icon}.png`,
            prefix,
            address: item.address,
            date: item.date,
            RFID: toolBox.RFID,
            latitude: item.position.lat,
            longitude: item.position.lng,
            width: icon === 'current' ? 24 : 25,
            height: icon === 'current' ? 24 : 40
          })
        })

        if (task.endPosition) {
          flows.push({
            id: flows.length,
            icon: 'dest.png',
            iconPath: '/images/dest.png',
            prefix: '到达',
            address: task.endAddress,
            latitude: task.endPosition.lat,
            longitude: task.endPosition.lng,
            RFID: toolBox.RFID,
            width: 25,
            height: 40
          })
        }

        this.toolBox = toolBox
        this.task = {id: task.id, remark: task.remark}
        this.markers = flows
        this.device = device
        this.polyline[0].points = flows
        if (flows.length > 0) {
          this.longitude = flows[0].longitude
          this.latitude = flows[0].latitude
        }
        this.$apply()
      } catch (e) {}
    }

    onLoad({RFID}) {
      this.queryDetail('B0001')
    }
  }
</script>
