<style lang="less">
  @import "../../less/mixin";

  page {
    background-color: #fff;
  }

  .login-logo {
    margin: 10% 30%;

    > image{
      display: block;
      width: 500rpx;
      height: 300rpx;
    }
  }

  .login-form {
    width: 90%;
    max-width: 1000rpx;
    .marign-auto();

    .form-item {
      border-top: 0;
      border-left: 0;
      border-right: 0;
      border-radius: 0;
    }

    .login-actions {
      margin-top: 100rpx;
    }
  }
</style>
<template>
  <view class="container">
    <view class="login-logo">
      <image src="../../images/logo.png" mode="aspectFit"></image>
    </view>
  </view>
  <view class="login-form">
    <mobileinput type="number" placeholder="手机号" :value="mobile" @input.user="handleMobile" />
    <passwordinput password="true" placeholder="密码" :value="password" @input.user="handlePassword" />
    <view class="login-actions">
      <button open-type="getUserInfo" class="button primary" @getuserinfo="handleLogin">登录</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Formitem from '../../components/formitem'
  import Button from '../../components/button'
  import {toast} from '../../utils/util'
  import {login, sendMessage} from '../../service/user'
  import {session} from '../../service/auth'

  const SEND_WAIT_TIME = 61

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }

    components = {
      mobileinput: Formitem,
      passwordinput: Formitem,
      codeinput: Formitem,
      loginbutton: Button
    }

    data = {
      mobile: '',
      password: '',
      code: '',
      secs: SEND_WAIT_TIME,
      isCodeGet: false
    }

    isLogining = false

    methods = {
      handleMobile (value) {
        this.mobile = value
      },
      handlePassword (value) {
        this.password = value
      },
      handleCode (value) {
        this.code = value
      },
      handleLogin(e) {
        this.doLogin(e.detail.userInfo)
      },
      async sendCode () {
        if (!this.mobile) {
          return toast.error('请输入手机号')
        }
        if (!this.password) {
          return toast.error('请输入密码')
        }
        let params = {phone: this.mobile, password: this.password}
        let res = await sendMessage(params)
        toast.success(res.message)
        this.startCountDown()
      }
    }

    async doLogin (userInfo) {
      if (this.isLogining) return

      if (!this.mobile) {
        return toast.error('请输入手机号')
      }
      if (!this.password) {
        return toast.error('请输入密码')
      }

      this.isLogining = true
      let params = {phone: this.mobile, password: this.password}
      return this.$navigate('/pages/home/home')
      try {
        let res = await login(params)
        this.isLogining = false
        session.set({...userInfo, ...res.data})
        this.$navigate('/pages/home/home')
      } catch (e) {
        this.isLogining = false
      }
    }

    startCountDown() {
      this.isCodeGet = true
      if (--this.secs > 0) {
        setTimeout(() => {
          this.startCountDown()
        }, 1000)
      } else {
        this.isCodeGet = false
        this.secs = SEND_WAIT_TIME
      }
      this.$apply()
    }

    onLoad () {
    }
  }
</script>
